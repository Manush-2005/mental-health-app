import React, { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from './ui/card'
import { Button } from './ui/button'
import { Checkbox } from './ui/checkbox'
import { cn } from '../lib/utils'


const TaskPlanner = () => {
  const navigate = useNavigate()
  const [tasks, setTasks] = useState([
    { id: '1', description: 'Go for a 15-minute walk outside', completed: false },
    { id: '2', description: 'Practice deep breathing for 5 minutes', completed: false },
    { id: '3', description: 'Write down 3 things you\'re grateful for', completed: false },
    { id: '4', description: 'Listen to a calming playlist', completed: false },
    { id: '5', description: 'Drink a glass of water and take a short break', completed: false }
  ])
  
  // In a real app, these would be generated by the AI based on user input
  const [streak, setStreak] = useState(0)

  const toggleTaskCompletion = (taskId) => {
    setTasks(tasks.map(task => 
      task.id === taskId ? { ...task, completed: !task.completed } : task
    ))
    
    // Update streak logic would be more complex in a real app
    const updatedTasks = tasks.map(task => 
      task.id === taskId ? { ...task, completed: !task.completed } : task
    )
    
    const allCompleted = updatedTasks.every(task => task.completed)
    if (allCompleted) {
      setStreak(streak + 1)
    }
  }

  return (
    <div className="max-w-3xl mx-auto">
      <div className="text-center mb-8">
        <h1 className="text-3xl font-bold text-primary mb-2">Your Personalized Task Plan</h1>
        <p className="text-muted-foreground">Complete these tasks to help manage your emotions</p>
      </div>

      <Card>
        <CardHeader className="pb-3">
          <div className="flex justify-between items-center">
            <CardTitle>Today's Tasks</CardTitle>
            <div className="flex items-center">
              <span className="text-sm text-muted-foreground mr-2">Current streak:</span>
              <span className="bg-primary/10 text-primary px-2 py-1 rounded-full text-sm font-medium">{streak} days</span>
            </div>
          </div>
          <CardDescription>
            Check off tasks as you complete them to build your streak
          </CardDescription>
        </CardHeader>

        <CardContent>
          <div className="space-y-4">
            {tasks.map(task => (
              <div 
                key={task.id} 
                className={cn(
                  "flex items-start space-x-4 p-4 rounded-lg border transition-colors",
                  task.completed ? "bg-primary/5 border-primary/20" : "bg-card border-border"
                )}
              >
                <Checkbox 
                  id={`task-${task.id}`}
                  checked={task.completed}
                  onCheckedChange={() => toggleTaskCompletion(task.id)}
                  className="mt-1"
                />
                <div className="flex-1">
                  <label 
                    htmlFor={`task-${task.id}`}
                    className={cn(
                      "text-sm font-medium cursor-pointer",
                      task.completed ? "line-through text-muted-foreground" : "text-foreground"
                    )}
                  >
                    {task.description}
                  </label>
                </div>
              </div>
            ))}
          </div>
        </CardContent>

        <CardFooter className="flex justify-between pt-2">
          <Button
            variant="outline"
            onClick={() => navigate('/context-intake')}
          >
            Back
          </Button>
          <Button
            onClick={() => navigate('/video-suggestions')}
          >
            View Video Suggestions
          </Button>
        </CardFooter>
      </Card>
    </div>
  )
}

export default TaskPlanner
